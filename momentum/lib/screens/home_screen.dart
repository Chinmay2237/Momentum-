\nimport \'package:flutter/material.dart\';\nimport \'package:momentum/services/habit_service.dart\';\nimport \'package:momentum/widgets/habit_card.dart\';\nimport \'package:momentum/models/habit.dart\';\nimport \'package:momentum/screens/edit_habit_screen.dart\';\n\nclass HomeScreen extends StatefulWidget {\n  const HomeScreen({Key? key}) : super(key: key);\n\n  @override\n  State<HomeScreen> createState() => _HomeScreenState();\n}\n\nclass _HomeScreenState extends State<HomeScreen> {\n  final HabitService _habitService = HabitService();\n  late Future<List<Habit>> _habitsFuture;\n\n  @override\n  void initState() {\n    super.initState();\n    _refreshHabits();\n  }\n\n  void _refreshHabits() {\n    setState(() {\n      _habitsFuture = _habitService.getHabits();\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text(\'Momentum\'),\n      ),\n      body: FutureBuilder<List<Habit>>(\n        future: _habitsFuture,\n        builder: (context, snapshot) {\n          if (snapshot.connectionState == ConnectionState.waiting) {\n            return const Center(child: CircularProgressIndicator());\n          } else if (snapshot.hasError) {\n            return Center(child: Text(\'Error: \${snapshot.error}\'));\n          } else if (!snapshot.hasData || snapshot.data!.isEmpty) {\n            return const Center(child: Text(\'No habits yet. Add one!\'));\n          } else {\n            final habits = snapshot.data!;\n            return ListView.builder(\n              itemCount: habits.length,\n              itemBuilder: (context, index) {\n                return HabitCard(habit: habits[index]);\n              },\n            );\n          }\n        },\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: () async {\n          await Navigator.push(\n            context,\n            MaterialPageRoute(builder: (context) => const EditHabitScreen()),\n          );\n          _refreshHabits();\n        },\n        child: const Icon(Icons.add),\n      ),\n    );\n  }\n}\n